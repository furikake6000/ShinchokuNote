openapi: 3.0.0
info:
  title: api
  version: '1.0'
  description: main api
  contact: {}
  termsOfService: 'https://shinchoku.net'
servers:
  - url: 'http://localhost:3000/api/v1'
    description: development
  - url: 'https://shinchoku.net/api/v1'
    description: production
paths:
  '/notes/{id}':
    parameters:
      - schema:
          type: number
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                  name:
                    type: string
                  desc:
                    type: string
                  stage:
                    type: string
                  view_stance:
                    type: string
                  rating:
                    type: string
                  watchers_count:
                    type: integer
                  shinchoku_dodeskas_count:
                    type: integer
                  comments_count:
                    type: integer
                  comment_form_visibility:
                    type: boolean
                  is_watching:
                    type: boolean
                  created_at:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
                required:
                  - type
                  - name
                  - desc
                  - stage
                  - view_stance
                  - rating
                  - watchers_count
                  - shinchoku_dodeskas_count
                  - comments_count
                  - comment_form_visibility
                  - created_at
                  - user
              examples: {}
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: get-note
      description: Get note information
  '/notes/{id}/posts':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
      - schema:
          type: integer
        name: page
        in: query
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      $ref: '#/components/schemas/Post'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      count:
                        type: integer
                      total_count:
                        type: integer
                    required:
                      - current_page
                      - total_pages
                      - count
                      - total_count
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: get-notes-id-posts
  '/notes/{id}/comments':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      parameters:
        - schema:
            type: integer
          name: page
          in: query
        - schema:
            type: string
            enum:
              - all
              - unreplied
              - replied
              - favored
          name: filter
          in: query
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/Comment'
                  meta:
                    type: object
                    properties:
                      current_page:
                        type: integer
                      total_pages:
                        type: integer
                      count:
                        type: integer
                      total_count:
                        type: integer
                    required:
                      - current_page
                      - total_pages
                      - count
                      - total_count
        '403':
          description: Forbidden
        '404':
          description: Not Found
      operationId: get-notes-id-comments
    post:
      summary: コメントを新しく投稿する
      tags: []
      parameters:
        - name: comment
          in: query
          required: true
          schema:
            type: object
            properties:
              text:
                type: string
              anonimity:
                type: string
            required:
              - text
        - name: recaptcha
          in: query
          required: true
          schema:
            type: object
            properties:
              token:
                type: string
              using_checkbox:
                type: boolean
            required:
              - token
              
      responses:
        '201':
          description: Created
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/notes/{id}/watchlist':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: ウォッチリストに登録する
      tags: []
      responses:
        '201':
          description: 登録成功
        '400':
          description: 既に登録されている
        '403':
          description: 登録する権限なし
        '404':
          description: ノートが見つからない
    delete:
      summary: ウォッチリストの登録を解除する
      tags: []
      responses:
        '200':
          description: 解除完了
        '400':
          description: 元々登録されていない
        '403':
          description: 登録する権限なし
        '404':
          description: ノートが見つからない
components:
  schemas:
    User:
      title: USer
      type: object
      properties:
        name:
          type: string
        url:
          type: string
        thumb_url:
          type: string
        twitter_screen_name:
          type: string
        desc:
          type: string
        projects:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        request_boxes:
          type: array
          items:
            $ref: '#/components/schemas/Note'
      required:
        - name
        - url
        - thumb_url
        - twitter_screen_name
        - desc
        - projects
        - request_boxes
    Note:
      title: Note
      type: object
      properties:
        type:
          type: string
        name:
          type: string
        desc:
          type: string
        url:
          type: string
        watch_url:
          type: string
        stage:
          type: string
        view_stance:
          type: string
        rating:
          type: string
        watchers_count:
          type: integer
      required:
        - type
        - name
        - desc
        - url
        - watch_url
        - stage
        - view_stance
        - rating
        - watchers_count
    Post:
      title: Post
      type: object
      properties:
        id:
          type: number
        type:
          type: string
        text:
          type: string
        date:
          type: string
        scheduled_date:
          type: string
        finished_date:
          type: string
          nullable: true
        images:
          type: array
          items:
            type: string
        responded_comment:
          type: object
          nullable: true
          properties:
            author:
              type: object
              required:
                - screen_name
                - url
              properties:
                screen_name:
                  type: string
                url:
                  type: string
            text:
              type: string
            date:
              type: string
          required:
            - text
            - date
      required:
        - id
        - type
        - text
        - date
        - responded_comment
    Comment:
      title: Comment
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        favored:
          type: boolean
        muted:
          type: boolean
        date:
          type: string
        author:
          type: object
          properties:
            name:
              type: string
            thumb_url:
              type: string
            desc:
              type: string
            twitter_screen_name:
              type: string
            url:
              type: string
            twitter_url:
              type: string
          required:
            - name
            - thumb_url
            - twitter_screen_name
            - url
            - twitter_url
        response_post:
          type: object
          nullable: true
          properties:
            id:
              type: integer
            type:
              type: string
            text:
              type: string
            images:
              type: array
              items:
                type: string
            date:
              type: string
          required:
            - id
            - type
            - text
            - date
      required:
        - id
        - text
        - favored
        - muted
        - date
        - response_post
  securitySchemes: {}
