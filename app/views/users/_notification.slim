.notification

    - case notify[:type]

    - when 'Comment'
        = render notify[:content], with_note_info: true
    
    - when 'ShinchokuDodeskas'
        .text-right.text-info.small-text
            = smart_time_to_str notify[:time]

        div 
            |
                #{link_to notify[:note].name, note_path(notify[:note])} に新しく
                #{notify[:shinchoku_dodeskas].group_by(&:content).map{|content, shinchoku_dodeskas| "#{shinchoku_dodeskas.size}件の「#{t "enums.shinchoku_dodeska.content.#{content}"}」" }.join('、')}
                が投稿されました！
        .overflow-x-auto
            - notify[:shinchoku_dodeskas].each do |s|
                - if s.from_user
                    - unless s.from_user.thumb_url.blank?
                        = link_to user_path(s.from_user.screen_name), class: 'position-relative inline-block-bottom' do
                            .text-center
                                - if s.content != 'plain'
                                    .balloon-static-withedge-primary.w-100px
                                        = image_tag "shinchoku_stamps/#{s.content}", class: 'w-100'
                                = image_tag(s.from_user.thumb_url, alt: s.from_user.name, class: 'mr-1 note-info-user-thumb rounded-circle', size: '32x32')
    
    - when 'Watchlists'
        .text-right.text-info.small-text
            = smart_time_to_str notify[:time]
            
        div #{link_to notify[:note].name, note_path(notify[:note])} は新しく#{notify[:watchlists].size}人のウォッチリストに登録されました！
        - notify[:watchlists].each do |w|
            - if w.watching_user
                = link_to \
                    image_tag(w.watching_user.thumb_url, alt: w.watching_user.name, class: 'mr-1 note-info-user-thumb rounded-circle', size: '32x32'),
                    user_path(w.watching_user.screen_name) \
                    unless w.watching_user.thumb_url.blank?